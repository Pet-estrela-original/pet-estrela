/**
 * @fileOverview Firestore Security Rules for Pet Memorial Profiles.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model, where each user can only access their own pet memorial profiles.
 *
 * Data Structure:
 * All pet memorial profiles are nested under /users/{userId}/pet_memorial_profiles/{profileId}.
 *
 * Key Security Decisions:
 * - Users can only manage (create, read, update, delete) pet memorial profiles under their own user ID.
 * - Listing profiles is restricted to the owner.
 * - The rules do not validate the data schema beyond requiring the `id` field to match the `profileId` on creation.
 *
 * Denormalization for Authorization:
 *  The `id` field of each pet memorial profile must match the `profileId` in the path. This ensures that users can only create profiles with their own user ID.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Secures the pet memorial profiles for each user.
     * @path /users/{userId}/pet_memorial_profiles/{profileId}
     * @allow (create) - User A can create a pet memorial profile under /users/A/pet_memorial_profiles/123 if request.auth.uid == "A" and request.resource.data.id == "123".
     * @allow (get) - User A can get a pet memorial profile under /users/A/pet_memorial_profiles/123 if request.auth.uid == "A".
     * @allow (update) - User A can update a pet memorial profile under /users/A/pet_memorial_profiles/123 if request.auth.uid == "A" and the document exists.
     * @allow (delete) - User A can delete a pet memorial profile under /users/A/pet_memorial_profiles/123 if request.auth.uid == "A" and the document exists.
     * @allow (list) - User A can list pet memorial profiles under /users/A/pet_memorial_profiles if request.auth.uid == "A".
     * @deny (create) - User A cannot create a pet memorial profile under /users/B/pet_memorial_profiles/123 because request.auth.uid != "B".
     * @deny (create) - User A cannot create a pet memorial profile under /users/A/pet_memorial_profiles/123 if request.resource.data.id != "123".
     * @deny (get) - User A cannot get a pet memorial profile under /users/B/pet_memorial_profiles/123 because request.auth.uid != "B".
     * @deny (update) - User A cannot update a pet memorial profile under /users/B/pet_memorial_profiles/123 because request.auth.uid != "B".
     * @deny (delete) - User A cannot delete a pet memorial profile under /users/B/pet_memorial_profiles/123 because request.auth.uid != "B".
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId}/pet_memorial_profiles/{profileId} {
      // Helper function to check if the request is made by the owner
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      // Helper function to check if the request is made by the owner and the document exists
      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      // Read operations
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      // Write operations
      allow create: if isOwner(userId) && request.resource.data.id == profileId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }
  }
}